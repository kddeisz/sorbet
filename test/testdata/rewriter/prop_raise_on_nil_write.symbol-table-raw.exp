class <C <U <root>>> < <C <U Object>> ()
  class <S <C <U <root>>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> ()
    method <S <C <U <root>>> $1><N <U <static-init>> $CENSORED> (<blk>) @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=2:1 end=5:4}
      argument <blk><block> @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=??? end=???}
  class <C <U Thing>> < <C <U Object>> (<C <U Props>>) @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=2:1 end=2:12}
    method <C <U Thing>><U foo> (<blk>) -> String | NilClass @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=4:3 end=4:57}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=??? end=???}
    method <C <U Thing>><U foo=> (foo, <blk>) -> String @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=4:3 end=4:57}
      argument foo<> -> String @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=4:9 end=4:12}
      argument <blk><block> -> T.untyped @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=??? end=???}
  class <S <C <U Thing>> $1>[<C <U <AttachedClass>>>] < <S <C <U Object>> $1> (<C <U ClassMethods>>) @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=2:7 end=2:12}
    type-member(+) <S <C <U Thing>> $1><C <U <AttachedClass>>> -> LambdaParam(<S <C <U Thing>> $1><C <U <AttachedClass>>>, lower=T.noreturn, upper=Thing) @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=2:7 end=2:12}
    method <S <C <U Thing>> $1><U <static-init>> (<blk>) @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=2:1 end=5:4}
      argument <blk><block> @ Loc {file=test/testdata/rewriter/prop_raise_on_nil_write.rb start=??? end=???}

